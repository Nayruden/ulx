NDSummary.OnToolTipsLoaded("MoonScriptClass:UtilX",{14:"<div class=\"NDToolTip TClass LMoonScript\"><div class=\"TTSummary\">A static class used for utility functions that are not specific to Garry\'s Mod.</div></div>",16:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype16\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@Type: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">value</td></tr></table></td><td class=\"PAfterParameters\">) -&gt; -- the moonscript object <span class=\"SHKeyword\">class</span></td></tr></table></div><div class=\"TTSummary\">Taken from Moonscript\'s library (moon.type). This is identical to Lua\'s type, just made Moonscript class-aware.</div></div>",17:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype17\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@Trim: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">str&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">using</span>&nbsp;</td><td class=\"PName last\">nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Trims leading and tailing whitespace from a string.</div></div>",18:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype18\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@LTrim: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">str&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">using</span>&nbsp;</td><td class=\"PName last\">nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Exactly like Trim except it only trims the left side. Taken from http://&#8203;lua-users&#8203;.org&#8203;/wiki&#8203;/CommonFunctions</div></div>",19:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype19\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@RTrim: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">str&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">using</span>&nbsp;</td><td class=\"PName last\">nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Exactly like Trim except it only trims the right side. Taken from http://&#8203;lua-users&#8203;.org&#8203;/wiki&#8203;/CommonFunctions</div></div>",20:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype20\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@Vardump: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">...&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">using</span>&nbsp;</td><td class=\"PName last\">nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Returns useful, readable information about variables.</div></div>",21:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype21\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@Raise: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">str,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">level</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">TODO</div></div>",22:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype22\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@RaiseUnimplemented: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">str,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">level</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">TODO</div></div>",23:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype23\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@Round: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">num,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">places</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Rounds a number to a given decimal place.</div></div>",24:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype24\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@TimeStringToNumber: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">str,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">unit</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;second&quot;</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">A natural language time string to convert into a number of time units (like seconds).&nbsp; Can accept minutes, hours, days, weeks, months, or years in the time string.&nbsp; Amounts can be fractional and positive or negative. See examples below.</div></div>",25:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype25\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@RaiseBadArg: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">fnName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">argnum,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">expected,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">data,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">level</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Raises an error similar to the Lua standard error of &quot;bad argument #x to &lt;fn_name&gt; (type expected, got type)&quot;.&nbsp; This function intelligently figures out how best to word the error with the given information.</div></div>",26:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype26\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@CheckArg: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">fnName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">argnum,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">expected,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">data,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">level</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Used to check to see if a function argument matches what is expected. If it doesn\'t, calls RaiseBadArg().&nbsp; This function is primarily useful at the beginning of a function definition to ensure that the correct type of data was passed in.</div></div>",27:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype27\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@CheckArgs: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">fnName,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">args,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">level</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">A shortcut for checking all the arguments passed into a function via CheckArg.</div></div>",28:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype28\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@Explode: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td></td><td class=\"PName last\">separator,</td></tr><tr><td class=\"first\"></td><td></td><td class=\"PName last\">str,</td></tr><tr><td class=\"PModifierQualifier first\">limit&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">using</span>&nbsp;</td><td class=\"PName last\">nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">Split a string by a separator.</div></div>",29:"<div class=\"NDToolTip TFunction LMoonScript\"><div id=\"NDPrototype29\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">@SplitArgs: (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">args,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">startToken</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">\'&quot;\'</span>,</td></tr><tr><td class=\"PName first\">endToken</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">\'&quot;\'</span> <span class=\"SHKeyword\">using</span> nil</td></tr></table></td><td class=\"PAfterParameters\">) -&gt;</td></tr></table></div><div class=\"TTSummary\">This is similar to a string explode function on whitespace, except that it also allows for grouping with startToken and endToken.</div></div>"});